#  Copyright 2021 Collate
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#  http://www.apache.org/licenses/LICENSE-2.0
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

clusterName: openmetadata

swagger:
  resourcePackage: org.openmetadata.service.resources


server:
  rootPath: '/api/*'
  applicationConnectors:
    - type: http
      port: 8585
  adminConnectors:
    - type: http
      port: 8586

  # Above configuration for running http is fine for dev and testing.
  # For production setup, where UI app will hit apis through DPS it
  # is strongly recommended to run https instead. Note that only
  # keyStorePath and keyStorePassword are mandatory properties. Values
  # for other properties are defaults
  #server:
  #applicationConnectors:
  #  - type: https
  #    port: 8585
  #    keyStorePath: ./conf/keystore.jks
  #    keyStorePassword: changeit
  #    keyStoreType: JKS
  #    keyStoreProvider:
  #    trustStorePath: /path/to/file
  #    trustStorePassword: changeit
  #    trustStoreType: JKS
  #    trustStoreProvider:
  #    keyManagerPassword: changeit
  #    needClientAuth: false
  #    wantClientAuth:
  #    certAlias: <alias>
  #    crlPath: /path/to/file
  #    enableCRLDP: false
  #    enableOCSP: false
  #    maxCertPathLength: (unlimited)
  #    ocspResponderUrl: (none)
  #    jceProvider: (none)
  #    validateCerts: true
  #    validatePeers: true
  #    supportedProtocols: SSLv3
  #    supportedCipherSuites: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
  #    allowRenegotiation: true
  #    endpointIdentificationAlgorithm: (none)

  #adminConnectors:
  #  - type: https
  #    port: 8586
  #    keyStorePath: ./conf/keystore.jks
  #    keyStorePassword: changeit
  #    keyStoreType: JKS
  #    keyStoreProvider:
  #    trustStorePath: /path/to/file
  #    trustStorePassword: changeit
  #    trustStoreType: JKS
  #    trustStoreProvider:
  #    keyManagerPassword: changeit
  #    needClientAuth: false
  #    wantClientAuth:
  #    certAlias: <alias>
  #    crlPath: /path/to/file
  #    enableCRLDP: false
  #    enableOCSP: false
  #    maxCertPathLength: (unlimited)
  #    ocspResponderUrl: (none)
  #    jceProvider: (none)
  #    validateCerts: true
  #    validatePeers: true
  #    supportedProtocols: SSLv3
  #    supportedCipherSuites: TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
  #    allowRenegotiation: true
  #    endpointIdentificationAlgorithm: (none)

# Logging settings.
# https://logback.qos.ch/manual/layouts.html#conversionWord
logging:
  level: INFO
  loggers:
    io.swagger: DEBUG
  appenders:
    - type: console
      threshold: TRACE
      logFormat: "%level [%d{ISO8601,UTC}] [%t] %logger{5} - %msg%n"
      timeZone: UTC
    - type: file
      filterFactories:
        - type: audit-exclude-filter-factory
      threshold: TRACE
      logFormat: "%level [%d{ISO8601,UTC}] [%t] %logger{5} - %msg%n"
      currentLogFilename: ./logs/openmetadata.log
      archivedLogFilenamePattern: ./logs/openmetadata-%d{yyyy-MM-dd}-%i.log.gz
      archivedFileCount: 7
      timeZone: UTC
      maxFileSize: 50MB
    - type: file
      filterFactories:
        - type: audit-only-filter-factory
      threshold: TRACE
      logFormat: "%level [%d{ISO8601,UTC}] [%t] %logger{5} - %msg%n"
      currentLogFilename: ./logs/audit.log
      archivedLogFilenamePattern: ./logs/audit-%d{yyyy-MM-dd}-%i.log.gz
      archivedFileCount: 25
      timeZone: UTC
      maxFileSize: 50MB

database:
  # the name of the JDBC driver, mysql in our case
  driverClass: com.mysql.cj.jdbc.Driver
  # the username and password
  user: openmetadata
  password: openmetadata123
  # the JDBC URL; the database is called openmetadata_db
  url: jdbc:mysql://mysql:3306/openmetadata?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC

migrationConfiguration:
  flywayPath: "./bootstrap/sql/migrations/flyway"
  nativePath: "./bootstrap/sql/migrations/native"
#  extensionPath: ""

# Authorizer Configuration
authorizerConfiguration:
  className: org.openmetadata.service.security.DefaultAuthorizer
  containerRequestFilter: org.openmetadata.service.security.JwtFilter
  adminPrincipals: [admin]
  allowedEmailRegistrationDomains: ["all"]
  principalDomain: "openmetadata.org"
  enforcePrincipalDomain: false
  enableSecureSocketConnection : false

authenticationConfiguration:
  provider: basic
  # This will only be valid when provider type specified is customOidc
  providerName: ""
  publicKeyUrls: [http://localhost:8585/api/v1/system/config/jwks]
  authority: https://accounts.google.com
  clientId: ""
  callbackUrl: ""
  jwtPrincipalClaims: [email,preferred_username,sub]
  enableSelfSignup : true
  samlConfiguration:
    debugMode: false
    idp:
      entityId: ""
      ssoLoginUrl: ""
      idpX509Certificate: ""
      authorityUrl: "http://localhost:8585/api/v1/saml/login"
      nameId: "urn:oasis:names:tc:SAML:2.0:nameid-format:emailAddress"
    sp:
      entityId: "http://localhost:8585/api/v1/saml/metadata"
      acs: "http://localhost:8585/api/v1/saml/acs"
      spX509Certificate: ""
      callback: "http://localhost:8585/saml/callback"
    security:
      strictMode: false
      tokenValidity: "3600"
      sendEncryptedNameId: false
      sendSignedAuthRequest: false
      signSpMetadata: false
      wantMessagesSigned: false
      wantAssertionsSigned: false
      wantAssertionEncrypted: false
      wantNameIdEncrypted: false
      keyStoreFilePath: ""
      keyStoreAlias: ""
      keyStorePassword: ""
  ldapConfiguration:
    host:
    port:
    dnAdminPrincipal: ""
    dnAdminPassword: ""
    userBaseDN: ""
    mailAttributeName:
    #optional
    maxPoolSize: 3
    sslEnabled:
    truststoreConfigType: TrustAll
    trustStoreConfig:
      customTrustManagerConfig:
        trustStoreFilePath:
        trustStoreFilePassword:
        trustStoreFileFormat:
        verifyHostname:
        examineValidityDates:
      hostNameConfig:
        allowWildCards:
        acceptableHostNames: []
      jvmDefaultConfig:
        verifyHostname:
      trustAllConfig:
        examineValidityDates: true

jwtTokenConfiguration:
  rsapublicKeyFilePath: "/opt/open-metadata/conf/public_key.der"
  rsaprivateKeyFilePath: "/opt/open-metadata/conf/private_key.der"
  jwtissuer: "open-metadata.org"
  keyId: "Gb389a-9f76-gdjs-a92j-0242bk94356"

elasticsearch:
  searchType: "elasticsearch"
  host: elasticsearch
  port: 9200
  scheme: http
  username: ""
  password: ""
  truststorePath: ""
  truststorePassword: ""
  connectionTimeoutSecs: 5
  socketTimeoutSecs: 60
  keepAliveTimeoutSecs: 600
  batchSize: 10
  searchIndexMappingLanguage: EN

eventMonitoringConfiguration:
  eventMonitor: prometheus  # Possible values are "prometheus", "cloudwatch"
  batchSize: 10
  pathPattern: ["/api/v1/tables/*", "/api/v1/health-check"]
  latency: [] # For value p99=0.99, p90=0.90, p50=0.50 etc.
  # it will use the default auth provider for AWS services if parameters are not set
  # parameters:
  #   region: ${OM_MONITOR_REGION:-""
  #   accessKeyId: ${OM_MONITOR_ACCESS_KEY_ID:-""
  #   secretAccessKey: ${OM_MONITOR_ACCESS_KEY:-""

eventHandlerConfiguration:
  eventHandlerClassNames:
    - "org.openmetadata.service.events.AuditEventHandler"
    - "org.openmetadata.service.events.ChangeEventHandler"
    - "org.openmetadata.service.events.WebAnalyticEventHandler"


pipelineServiceClientConfiguration:
  #enabled: true
  # If we don't need this, set "org.openmetadata.service.clients.pipeline.noop.NoopClient" "default config "org.openmetadata.service.clients.pipeline.airflow.AirflowRESTClient
  className: org.openmetadata.service.clients.pipeline.noop.NoopClient"
  apiEndpoint: http://localhost:8080
  metadataApiEndpoint: http://localhost:8585/api
  ingestionIpInfoEnabled: false
  hostIp: ""
  healthCheckInterval: 300
  # This SSL information is about the OpenMetadata server.
  # It will be picked up from the pipelineServiceClient to use/ignore SSL when connecting to the OpenMetadata server.
  verifySSL: "no-ssl" # Possible values are "no-ssl", "ignore", "validate"
  sslConfig:
    certificatePath: "" # Local path for the Pipeline Service Client

  # Secrets Manager Loader: specify to the Ingestion Framework how to load the SM credentials from its env
  # Supported: noop, airflow, env
  secretsManagerLoader: "noop"

  # Default required parameters for Airflow as Pipeline Service Client
  parameters:
    username: admin
    password: admin
    timeout: 10
    # If we need to use SSL to reach Airflow
    truststorePath: ""
    truststorePassword: ""


# no_encryption_at_rest is the default value, and it does what it says. Please read the manual on how
# to secure your instance of OpenMetadata with TLS and encryption at rest.
fernetConfiguration:
  fernetKey: jJ/9sz0g0OHxsfxOoSfdFdmk3ysNmPRnH3TUAbz3IHA=

secretsManagerConfiguration:
  secretsManager: noop # Possible values are "noop", "aws", "aws-ssm"
  # it will use the default auth provider for the secrets' manager service if parameters are not set
  parameters:
    region: ""
    accessKeyId: ""
    secretAccessKey: ""

health:
  delayedShutdownHandlerEnabled: true
  shutdownWaitPeriod: 1s
  healthChecks:
    - name: OpenMetadataServerHealthCheck
      critical: true
      schedule:
        checkInterval: 2500ms
        downtimeInterval: 10s
        failureAttempts: 2
        successAttempts: 1

email:
  emailingEntity: "OpenMetadata"
  supportUrl: "https://slack.open-metadata.org"
  enableSmtpServer : false
  openMetadataUrl: ""
  senderMail: ""
  serverEndpoint: ""
  serverPort: ""
  username: ""
  password: ""
  transportationStrategy: "SMTP_TLS"

applicationConfig:
  logoConfig:
    customLogoUrlPath: "" #login page logo
    customMonogramUrlPath: "" #nav bar logo
  loginConfig:
    maxLoginFailAttempts: 3
    accessBlockTime: 600
    jwtTokenExpiryTime: 7200


web:
  uriPath: "/api"
  hsts:
    enabled: false
    maxAge: "365 days"
    includeSubDomains: "true"
    preload: "true"
  frame-options:
    enabled: false
    option: "SAMEORIGIN"
    origin: ""
  content-type-options:
    enabled: false
  xss-protection:
    enabled: false
    on: true
    block: true
  csp:
    enabled: false
    policy: "default-src 'self'"
    reportOnlyPolicy: ""
  referrer-policy:
    enabled: false
    option: "SAME_ORIGIN"
  permission-policy:
    enabled: false
    option: ""


changeEventConfig:
  omUri: "http://localhost:8585"
  #openmetadata in om uri for eg http://localhost:8585
